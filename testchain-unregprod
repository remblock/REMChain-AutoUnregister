#!/bin/bash

#****************************************************************************************************#
#                                           TESTCHAIN-UNREGPROD                                      #
#****************************************************************************************************#

#----------------------------------------------------------------------------------------------------#
# SCRIPT MADE TO RUN BY CRON EVERY MINUTE                                                            #
#----------------------------------------------------------------------------------------------------#

if (($EUID!=0))
then
  echo "You must be root to run this script" 2>&1
  exit 1
fi

#----------------------------------------------------------------------------------------------------#
# CONFIGURATION VARIABLES                                                                            #
#----------------------------------------------------------------------------------------------------#

create_dir="/root/remblock/testchain-unregprod"
config_file="/root/remblock/testchain-unregprod/config"
check_unregprod_script_path="/root/check-unregprod"
testchain_unregprod_script_path="/root/remblock/testchain-unregprod/bp-unregprod"
#PATH to used commands
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
cron_cmd="/root/remblock/testchain-unregprod/testchain-unregprod"
now_epoch="$(date +%s)"

#----------------------------------------------------------------------------------------------------#
# CREATE DIRECTORY IF IT DOESN'T EXIST                                                               #
#----------------------------------------------------------------------------------------------------#

if [ ! -d "$create_dir" ]
then
  mkdir -p "$create_dir"
  cp -p "$0" "$create_dir"
fi

#----------------------------------------------------------------------------------------------------#
# INSTALL CRONTAB LINE IF IT DOESN'T EXIST                                                           #
#----------------------------------------------------------------------------------------------------#

if [ ! -z "$cron_cmd" ] && ! crontab -u root -l | grep -v '^ *#' | grep "$cron_cmd" &>/dev/null
then
  (crontab -u root -l ; echo "*/1 * * * * $cron_cmd") | crontab -u root -
fi

#----------------------------------------------------------------------------------------------------#
# GET YES OR NO ANSWER FROM USER                                                                     #
#----------------------------------------------------------------------------------------------------#

function get_user_answer_yn(){
  while :
  do
    read -p "$1 [y/n]: " answer
    answer="$(echo $answer | tr '[:upper:]' '[:lower:]')"
    case "$answer" in
      yes|y) return 0 ;;
      no|n) return 1 ;;
      *) echo  "Invalid Answer [yes/y/no/n expected]";continue;;
    esac
  done
}

#----------------------------------------------------------------------------------------------------#
# GET VALUE FROM THE CONFIG FILE, RETURN IT WITH THE VARIABLE "global_value"                         #
#----------------------------------------------------------------------------------------------------#

function get_config_value() {
  global_value=$(grep -v '^#' "$config_file" | grep "^$1=" | awk -F '=' '{print $2}')
  if [ -z "$global_value" ]
  then
    return 1
  else
    return 0
  fi
}

#----------------------------------------------------------------------------------------------------#
# CREATE CONFIG FILE IF IT DOESN'T EXIST                                                             #
#----------------------------------------------------------------------------------------------------#

if [ ! -f "$config_file" ]
then
  echo "#Configuration file for the unregprod script" > "$config_file"
  echo "#Make the entries as variable=value" >> "$config_file"
  echo " " >> "$config_file"
fi

#----------------------------------------------------------------------------------------------------#
# CREATES THE CHECK UNREGPROD SCRIPT IF IT DOESN'T EXIST                                            #
#----------------------------------------------------------------------------------------------------#

if [ ! -f "$check_unregprod_script_path" ]
then
cat > "$check_unregprod_script_path" << 'DOC'
true
DOC
fi

#----------------------------------------------------------------------------------------------------#
# CREATES THE BACKUP UNREGPROD SCRIPT IF IT DOESN'T EXIST                                            #
#----------------------------------------------------------------------------------------------------#

if [ ! -f "$testchain_unregprod_script_path" ]
then
cat > "$testchain_unregprod_script_path" << 'DOC'
#!/usr/bin/env bash

#----------------------------------------------------------------------------------------------------#
# UNREGISTER AS A BLOCK PRODUCER                                                                     #
#----------------------------------------------------------------------------------------------------#

remcli wallet unlock --password $walletpass > /dev/null 2>&1
output=$(remcli -u https://testchain.remme.io system unregprod $accountname -x 120 -p $accountname@$producerpermission)
DOC
  chmod u+x "$testchain_unregprod_script_path"
fi

#****************************************************************************************************#
#                                   GETTING POSSIBLE MISSING VALUE                                   #
#****************************************************************************************************#

#----------------------------------------------------------------------------------------------------#
# GET PRODUCER NAME IF NOT ALREADY ON THE CONFIG FILE                                                #
#----------------------------------------------------------------------------------------------------#

if get_config_value accountname
then
  accountname="$global_value"
elif [ -z "$global_value" ]
then
  accountname=$(cat config/config.ini | grep 'producer-name' | awk '{print $3}')
  if [ ! -z "$accountname" ]
  then
    echo "accountname=$accountname" >> "$config_file"
  fi
elif [ -z "$accountname" && -z "$global_value" ]
then
  echo ""
  read -p "ENTER YOUR PRODUCER NAME: " -e accountname
  echo "accountname=$accountname" >> "$config_file"
fi

#----------------------------------------------------------------------------------------------------#
# GET WALLET PASSWORD IF NOT ALREADY ON THE CONFIG FILE                                              #
#----------------------------------------------------------------------------------------------------#

if get_config_value walletpass
then
  walletpass="$global_value"
elif [ -z "$global_value" ]
then
  walletpass=$(cat walletpass)
  if [ ! -z "$walletpass" ]
  then
    echo "walletpass=$walletpass" >> "$config_file"
  fi
elif [ -z "$walletpass" && -z "$global_value" ]
then
  echo ""
  read -p "ENTER YOUR WALLET PASSWORD: " -e walletpass
  echo "walletpass=$walletpass" >> "$config_file"
fi

#----------------------------------------------------------------------------------------------------#
# GET ACTIVE PRODUCER PUBLIC KEY IF NOT ALREADY ON THE CONFIG FILE                                   #
#----------------------------------------------------------------------------------------------------#

if get_config_value activeproducerpublickey
then
  activeproducerpublickey="$global_value"
elif [ -z "$global_value" ]
then
  activeproducerpublickey=$(remcli -u https://testchain.remme.io get table rem rem producers -L $accountname -U $accountname | grep 'producer_key' | awk '{print $2}' | tr -d '"' | tr -d ',')
  if [ ! -z "$activeproducerpublickey" ]
  then
    echo "activeproducerpublickey=$activeproducerpublickey" >> "$config_file"
  fi
elif [ -z "$activeproducerpublickey" && -z "$global_value" ]
then
  echo ""
  read -p "ENTER YOUR PRODUCER PUBLIC KEY: " -e activeproducerpublickey
  echo "activeproducerpublickey=$activeproducerpublickey" >> "$config_file"
fi

#----------------------------------------------------------------------------------------------------#
# GET PERMISSION IF NOT ALREADY ON THE CONFIG FILE                                                   #
#----------------------------------------------------------------------------------------------------#

if get_config_value producerpermission
then
  producerpermission="$global_value"
elif [ -z "$global_value" ]
then
  producerpermission=$(remcli -u https://testchain.remme.io get account $accountname | grep $activeproducerpublickey | awk '{print $1}' | sed -n 1p)
  if [ ! -z "$producerpermission" ]
  then
    echo "producerpermission=$producerpermission" >> "$config_file"
  fi
elif [ -z "$producerpermission" && -z "$global_value" ]
then
  echo ""
  read -p "ENTER YOUR PRODUCER PERMISSION: " -e producerpermission
  echo "producerpermission=$producerpermission" >> "$config_file"
fi

#----------------------------------------------------------------------------------------------------#
# GET TELEGRAM DATA IF NOT ALREADY ON THE CONFIG FILE                                                #
#----------------------------------------------------------------------------------------------------#

if get_config_value telegram_enabled
then
  if [ "$global_value" = "true" ]
  then
    telegram_enabled=true
  elif [ -z "$global_value" ]
  then
    if get_user_answer_yn "ENABLE TELEGRAM NOTIFICATIONS"
    then
      echo "telegram_enabled=true" >> "$config_file"
    else
      echo "telegram_enabled=false" >> "$config_file"
    fi
  fi
  if get_config_value telegram_token
  then
    telegram_token="$global_value"
  elif [ -z "$global_value" ]
  then
    echo ""
    read -p "ENTER YOUR TELEGRAM TOKEN API: " -e telegram_token
    echo "telegram_token=$telegram_token" >> "$config_file"
  fi
  if get_config_value telegram_chatid
  then
    telegram_chatid="$global_value"
  elif [ -z "$global_value" ]
  then
    echo ""
    read -p "ENTER YOUR TELEGRAM CHAT ID: " -e telegram_chatid
    echo "telegram_chatid=$telegram_chatid" >> "$config_file"
  fi
elif [ "$global_value" = "false" ]
then
  telegram_enabled=false
fi

#----------------------------------------------------------------------------------------------------#
# USER BLOCK MINUTE VALUE IF NOT SET IN THE CONFIG FILE                                              #
#----------------------------------------------------------------------------------------------------#

if get_config_value check_last_block_minutes
then
  check_last_block_minutes="$global_value"
elif [ -z "$global_value" ]
then
  echo ""
  read -p "ENTER MINTUES TO AUTO-UNREGISTER IF YOU'RE NOT PRODUCING?: " -e check_last_block_minutes
  echo ""
  echo "check_last_block_minutes=$check_last_block_minutes" >> "$config_file"
fi

#****************************************************************************************************#
#                                       FUNCTIONS DEFINITIONS                                        #
#****************************************************************************************************#

#----------------------------------------------------------------------------------------------------#
# TRANSLATE THE TIME FORMAT FROM REMCLI FORMATE TO EPOCH TIME                                        #
#----------------------------------------------------------------------------------------------------#

function remnodelogtime_to_epoch() {
  temp_date="$( echo $1 | awk -F '.' '{ print $1}' | tr '-' '/' | tr 'T' ' ')"
  echo $(date "+%s" -d "$temp_date")
}

#----------------------------------------------------------------------------------------------------#
# FUNCTION THAT CHECKS WHETHER THE NODE HAS ACTUAL PRODUCED A BLOCK WITHIN THE CONFIGURED MINUTES    #
#----------------------------------------------------------------------------------------------------#

function check_produce_minutes() {
  #Check if the recover script is already running before starting it again
  active=$(remcli -u https://testchain.remme.io get table rem rem producers -L $accountname -U $accountname | grep 'is_active' | awk '{print $2}' | tr -d '"' | tr -d ',') 
  if [ -z "$active" ]
  then
    active=$(remcli get table rem rem producers -L $accountname -U $accountname | grep 'is_active' | awk '{print $2}' | tr -d '"' | tr -d ',')
  fi
  if ! pgrep 'bp-unregprod' &> /dev/null
  then
    #Execute unregister only if it's registered
    if [ "$active" = "1" ]
    then
      export accountname
      export walletpass
      export producerpermission
      bash "$testchain_unregprod_script_path" &>/dev/null
      telegram_message="Testchain-Unregprod script has executed"
      curl -s -X POST https://api.telegram.org/bot$telegram_token/sendMessage -d chat_id=$telegram_chatid -d text="$telegram_message" &>/dev/null
    fi
  fi
}

#----------------------------------------------------------------------------------------------------#
# MAIN PART OF THE SCRIPT                                                                            #
#----------------------------------------------------------------------------------------------------#

  unregprod=$(cat "$check_unregprod_script_path")
  if [ "$unregprod" = "true" ]
  then
    last_block_date=$(remcli -u https://testchain.remme.io get table rem rem producers -L $accountname -U $accountname | grep 'last_block_time' | awk '{print $2}' | tr -d '"' | tr -d ',')
    last_block_epoch=$(remnodelogtime_to_epoch "$last_block_date")
    config_minutes_in_seconds=$(( (check_last_block_minutes * 60) - 60 ))
    if (( ($now_epoch - $last_block_epoch) >= $config_minutes_in_seconds ))
    then
      check_produce_minutes
    fi
  elif [ -z "$last_block_date" ]
  then
    last_block_date=$(remcli get table rem rem producers -L $accountname -U $accountname | grep 'last_block_time' | awk '{print $2}' | tr -d '"' | tr -d ',')
    last_block_epoch=$(remnodelogtime_to_epoch "$last_block_date")
    config_minutes_in_seconds=$(( (check_last_block_minutes * 60) - 60 ))
    if (( ($now_epoch - $last_block_epoch) >= $config_minutes_in_seconds ))
    then
      check_produce_minutes
    fi
  fi
